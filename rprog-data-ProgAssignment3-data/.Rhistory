source('~/Documents/Coursera_Data_Science/datasciencecoursera/Week_3/ProgrammingAssignment2/cachematrix.R')
swirl()
library("swirl")
swirl()
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6,4,replace = TRUE)
sample(1:6,4,replace = TRUE)
sample(1:20,10)
letters
LETTERS
sample(LETTERS)
flips<-sample(c(0,1),100,replace = TRUE,prob = c(0.3,0.7))
flips
sum(flips)
?rbinom
rbinom(1,size = 100,prob = 0.7)
flips2<-rbinom(100,size = 1,prob = 0.7)
flips2
sum(flips2)
rnorm()
?rnorm
rnorm(10)
rnorm(10,mean=100,sd=25)
rpois(5,10)
replicate(100,rpois(5,10))
my_pois<-replicate(100,rpois(5,10))
my_pois
cm<-colMeans(my_pois)
hist(cm)
data("cars")
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(cars$speed,cars$dist)
plot(cars$dist,cars$speed)
plot(cars$speed,cars$dist,xlab=speed)
plot(cars$speed,cars$dist,xlab="speed")
plot(x=cars$speed,y=cars$dist,xlab="speed")
plot(x=cars$speed,y=cars$dist,xlab="Speed")
plot(x=cars$speed,y=cars$dist,xlab="Speed", ylab ="Stopping Distance")
plot(x=cars$speed,y=cars$dist,ylab ="Stopping Distance")
plot(x=cars$speed,y=cars$dist,xlab="Speed", ylab ="Stopping Distance")
plot(cars,main="My Plot")
plot(cars,main="My Plot",sub="My Plot Subtitle")
plot(cars,sub="My Plot Subtitle")
plot(cars,col=2)
plot(cars,xlim=c(10,15))
plot(cars,pch=2
)
mtcars
data("mtcars")
data(mtcars)
play()
dim(mtcars)
summary(mtcars)
str(mtcars)
head(a)
nxt()
?boxplaot()
?boxplaot
?boxplot
boxplot(mpg~cyl,data=mtcars)
hist(mtcars$mpg)
0
swirl()
hist(mtcars$mpg)
hist(mtcars$mpg,col=2)
hist(mtcars$mpg,col=6)
hist(mtcars$mpg,col=511)
hist(mtcars$mpg,col=51)
hist(mtcars$mpg,col=5435)
hist(mtcars$mpg,col=543)
hist(mtcars$mpg,col=53)
hist(mtcars$mpg,col=34)
hist(mtcars$mpg,col=34,xlim=c(20,30))
hist(mtcars$mpg,col=34,xlim=c(20,30),ylim=c(4,9))
hist(mtcars$mpg,col=64,xlim=c(20,30),ylim=c(4,9))
hist(mtcars$mpg,col=53)
setwd("/Volumes/WD Unlocker")
ls
list.dir()
list.files()
extras
system.time(readline("www.facebook.com"))
system.time(readline("www.facebook.com"))
system.time(readline("http://www.facebook.com"))
system.time(readline("https://www.facebook.com"))
set.seed(1)
rpois(5,2)
a=rpois(5,2)
class(a)
set.seed(1-)
set.seed(10)
x<-rep(0:1,each=5)
e=rnorm(10,0,20)
y=0.5 = 2*x +e
y=0.5 + 2*x +e
y
ploy(x,y)
plot(x,y)
library(datasets)
Rprof()
fit=lm(y~x1+x2)
summaryRprof()
x
url <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv'
download.file(url, 'house.csv', method='curl')
house <- read.csv('house.csv')
View(house)
View(subset(house, house$VAL == 24))
sum(house$VAL==24, na.rm = T)
table(house$VAL)
View(house$VAL==24)
View(house[house$VAL==24, ])
install.packages('xlsx')
install.packages('xlsxjars')
install.packages('rJava')
library(xlsx)
url  <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx'
download.file(url, 'gas.xlsx', method = 'curl', mode = 'wb')
colI <- 7:15
rowI <- 18:23
gas  <- read.xlsx('gas.xlsx', sheetIndex = 1, colIndex = colI, rowIndex = rowI)
sum(gas$Zip*gas$Ext,na.rm=T)
library(xlsx)
library("xlsx")
library("xslx")
library(xlsx)
install.packages("xlsx")
install.packages("rjava")
install.packages("rJava")
install.packages("xlsxjar")
library(xlsx)
gas  <- read.xlsx('gas.xlsx', sheetIndex = 1, colIndex = colI, rowIndex = rowI)
colI <- 7:15
rowI <- 18:23
gas  <- read.xlsx('gas.xlsx', sheetIndex = 1, colIndex = colI, rowIndex = rowI)
gas
dat  <- read.xlsx('gas.xlsx', sheetIndex = 1, colIndex = colI, rowIndex = rowI)
sum(dat$Zip*dat$Ext,na.rm=T)
install.packages("XML")
dfile ="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
download.file(dfile,"restaurants.xml","curl")
library(XML)
res=xmlTreeParse("rest.xml",useInternalNodes = TRUE)
res=xmlTreeParse("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml",useInternal = TRUE)
url="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(url, useInternal = T)
doc
file.url <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml'
file.dest <- 'balt.rest.xml'
download.file(file.url, file.dest, method='curl')
doc <- xmlTreeParse('balt.rest.xml', useInternalNodes = TRUE)
doc
rootnode=xmlRoot(doc)
xmlName(rootnode)
rootnode
rootnode[1]
rootnode[[1]
]
zip <- xpathSApply(doc, '//zipcode', xmlValue)
length(zip[zip==21231])
a=read.csv(download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv","communities.csv","curl"),header = TRUE)
a
install.packages("data.table")
library(data.table)
DT=fread("communities.csv")
DT
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2])
install.packages('microbenchmark')
library(microbenchmark)
f1 <- function(x) {
DT[,mean(pwgtp15),by=SEX]
}
f2 <- function(x) {
sapply(split(DT$pwgtp15,DT$SEX),mean)
}
f3 <- function(x) {
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
}
f4 <- function(x) {
tapply(DT$pwgtp15,DT$SEX,mean)
}
microbenchmark(f1(x), f2(x), f3(x), f4(x))
?microbenchmark
setwd("~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data")
ourcome<-read.csv("outcome-of-care-measures.csv",header=TRUE)
outcome<-read.csv("outcome-of-care-measures.csv",header=TRUE)
head(outcome)
ncol(outcome)
names(outcome)
c=as.numeric(outcome[,11])
c
hist(c)
nameS(outcome)
names(outcome)
unique(outcome[,7])
outcome[,7]
outcome(outcome[,7]="WA")
is.element("WA",outcome[,7])
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("WA","heart attack")
best("QV","heart attack")
best("WA","heart attack2")
outcome
illness=(as.numeric(outcome[,11]))
illness
min(illness)
min(illness,na.rm = TRUE)
mean(illness)
split(outcome,outcome[,7])
str(lapply(split(outcome,outcome[,7]),mean)
)
str(lapply(split(outcome,outcome[,7],na.rm=TRUE),mean)
)
str(lapply(split(!is.na(outcome,outcome[,7]),mean))
)
str(lapply(split(!is.na(outcome,outcome[,7])),mean))
str(lapply(!is.na(split(outcome,outcome[,7])),mean))
str(lapply(!is.na(split(outcome[0,11],outcome[,7])),mean))
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("TX","heart attack")
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("TX","heart attack")
order(outcome[,7])
outcome[,7]
order(unique(outcome[,7]))
unique(outcome[,7])
?order
sort.list(unique(outcome[,7])
)
outcome(1)
outcome[outcome$State="WA"]
outcome[outcome$State]
outcome[outcome$State=="WA"]
outcome[outcome$State == "WA"]
outcome[outcome$State]
names(outcome)
outcome$State
outcome$State=="WA"
unique(outcome$State)
order(unique(outcome$State))
order(unique(outcome$State),decreasing = TRUE)
is.na(outcome$State)
str(is.na(outcome$State))
str(unique(is.na(outcome$State))
)
unique(is.na(outcome$State))
illness
cbind(outcome[,2],illness)
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("WA","heart attack")
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("WA","heart attack")
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("WA","heart attack")
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("WA","heart attack")
head(data)
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("WA","heart attack")
db=cbind(outcome[,2],illness)
head(db)
db[1]
colnames(db,c("asdasd","asdasddfgdfga"))
colnames(db)=c("asdasd","asdasddfgdfga"))
colnames(db)=c("asdasd","asdasddfgdfga")
head(db)
colnames(db)=c("State",outcome||" Rate")
colnames(db)=c("State","asdasd"||" Rate")
colnames(db)=c("State",c("asdasd","asdasdasdsgkjshgadhgl"))
colnames(db)=c("State",c("asdasd","ahsd"))
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("TX","pneumonia")
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("TX","pneumonia")
sum(data[,2])
data
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("TX","pneumonia")
names(outcome)
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("TX","pneumonia")
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("TX","pneumonia")
outcome[outcome$State="WA"]
outcome[outcome$State=="WA"]
outcome[outcome$State=="WA",]
head(outcome[outcome$State=="WA",])
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("TX","heart attack")
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("TX","heart attack")
best("TX","heart attacsadk")
best("TXasd","heart attack")
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("TX","heart attack")
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("TX","heart attack")
outcome=outcome[outcome$State=="WA"]
outcome=outcome[outcome$State=="WA",]
outcome
unique(outcome$State)
outcome=outcome[outcome$State=="TX",]
outcome
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("TX","heart attack")
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("TX","heart attack")
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("TX","heart attack")
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("TX","heart attack")
outcome$State
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("TX","heart attack")
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("TX","heart attack")
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("TX","heart attack")
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("TX","heart attack")
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("TX","heart attack")
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("TX","heart attack")
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("TX","heart attack")
ocm<-read.csv("outcome-of-care-measures.csv",colClasses = "character",header=TRUE)
head(ocm)
names(ocm)
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
names(ocm)
best("TX","heart attack")
ocm[ocm$State="WA",]
ocm[ocm$State=="WA",]
a=ocm[ocm$State=="WA",]
unique(a$State)
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("TX","heart attack")
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("TX","heart attack")
best("AK","heart attack")
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("AK","heart attack")
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("AK","heart attack")
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("AK","heart attack")
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("AK","heart attack")
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("AK","heart attack")
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("AK","heart attack")
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("AK","heart attack")
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("AK","heart attack")
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("AK","heart attack")
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("AK","heart attack")
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("AK","heart attack")
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("AK","heart attack")
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("AK","heart attack")
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("AK","heart attack")
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("AK","heart attack")
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("AK","heart attack")
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("AK","heart attack")
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("AK","heart attack")
best("WA","heart attack")
best("WA","pneumonia")
best("TX","pneumonia")
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("TX","pneumonia")
best("WA","pneumonia")
best("CA","heart attack")
best("CA","pneumonia")
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("CA","pneumonia")
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("CA","pneumonia")
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("CA","pneumonia")
?write.csvc
?write.csv
getwd()
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("CA","pneumonia")
best("CA","pneumonia")
?order
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("CA","pneumonia")
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("CA","pneumonia")
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("CA","pneumonia")
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("CA","pneumonia")
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("CA","pneumonia")
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("CA","pneumonia")
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best_sample.R')
best("MD", "pneumonia")
best("TX", "heart failure")
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("TX", "heart failure")
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("TX", "heart failure")
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("TX", "heart failure")
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("TX", "heart failure")
best("MD", "pneumonia")
best("TX", "heart attack")
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("TX", "heart attack")
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("TX", "heart attack")
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("TX", "heart attack")
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("TX", "heart attack")
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/rankhospital.R')
best("TX", "heart attack",4)
rankhospital("TX", "heart attack",4)
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/rankhospital.R')
rankhospital("TX", "heart attack",4)
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
rankhospital("MD", "heart attack", "best")
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/rankhospital.R')
rankhospital("MD", "heart attack", "best")
rankhospital("MD", "heart attack", "worst")
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/rankhospital.R')
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/rankhospital.R')
rankhospital("MD", "heart attack", "worst")
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/rankhospital.R')
rankhospital("MD", "heart attack", 3000)
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/rankall.R')
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
head(rankall("heart attack", 20), 10)
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/Best.R')
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/rankhospital.R')
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
source('~/Documents/Coursera_Data_Science/datasciencecoursera/rprog-data-ProgAssignment3-data/rankall.R')
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
r <- rankall("heart failure", 10)
as.character(subset(r, state == "NV")$hospital)
swirl()
library(swirl)
rm(list=ls())
swirl)
swirl()
install.packages("data.table")
q()
