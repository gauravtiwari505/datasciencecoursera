con = https://web.whatsapp.com/
con = "https://web.whatsapp.com/"
a=readLines(con)
head(a)
a
clr
clscr
clrscr()
a= available.packages()
count(a)
b= count.fields(a)
a
head(a)
ls a
head(row.names(a))
install.packages("slidify")
install.packages("kernsmooth")
install.packages("kernSmooth")
install.packages("KernSmooth")
library(KernSmooth)
library(datasets)
data(iris)
head(iris)
s=split(iris,iris$Species)
apply(s,1,colMeans(s$virginica))
lapply(split(iris,iris$Species),mean)
lapply(split(iris,iris$Sepal.Length),mean)
s
s=split(iris,iris$Species)
lapply(s,function(x),colmeans(x[,c("Sepal.Lenght")]))
lapply(s,function(x),colmeans(x["Sepal.Length"]))
lapply(s,function(x) colmeans(x["Sepal.Length"]))
lapply(s,function(x) colMeans(x["Sepal.Length"]))
head(iris)
apply(iris[,1:4],mean)
apply(iris[,1:4],1,mean)
apply(iris[,1:4],2,mean)
apply(iris,2,mean)
colMeans(iris)
rowMeans(iris[,1:4])
apply(iris,1,mean)
apply(iris[,1:4],2,mean)
data("mtcars")
head(mtcars)
lapply(split(mtcars,cyl),mean)
lapply(split(mtcars,mtcars$cyl),mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
apply(mtcars, 2, mean)
with(mtcars, tapply(mpg, cyl, mean))
lapply(mtcars,mean)
sapply(mtcars,cyl,mean)
sapply(mtcars,mtcars$cyl,mean)
tapply(mtcars$mpg,mtcars$cyl,mean)
sapply(split(mtcars$mpg,mtcars$cyl),mean)
mean(mtcars$mpg,mtcars$cyl)
head(mtcars)
tapply(mtcars$hp,mtcars$cyl,mean)
s = str(tapply(mtcars$hp,mtcars$cyl,mean))
s = tapply(mtcars$hp,mtcars$cyl,mean)
s
s[4]-s[6]
s[1]-s[2]
debug(ls)
ls()
0
q
1
library(datasets)
head(mtcars)
split(mtcars,mtcars$cyl)
s=split(mtcars,mtcars$cyl)
str(s)
lapply(s,function(x) colMeans(x[,"hp"]))
lapply(s,function(x) colMeans(x[,c("hp")]))
lapply(s,function(x) colMeans(x[hp]))
s
lapply(s,function(x) colMeans(x[,c("hp")]))
lapply(s,function(x) colMeans(x[,hp]))
lapply(s,function(x) colMeans(x[3]))
lapply(s,function(x) colMeans(x[4]))
str(lapply(s,function(x) colMeans(x[4])))
s=lapply(s,function(x) colMeans(x[4]))
s
str(s)
s[1]-s[3]
s=str(lapply(s,function(x) colMeans(x[4])))
head(iris)
apply(iris,2,mean)
rowMeans(iris[,1:4])
apply(iris,1,mean)
apply(iris[,1:4],2,mean)
colMeans(iris)
apply(iris[,1:4],1,mean)
source('~/Documents/Coursera_Data_Science/datasciencecoursera/Week_3/ProgrammingAssignment2/cachematrix.R')
a<-matrix(c(1,2),c(3,4))
a<-matrix(c(1,2),c(3,4),2,2)
a
a<-matrix(1:2,3:4,2,2)
a
a<-matrix(c(1:4),nrow = 2, ncol =2)
a
makeCacheMatrix(a)
cacheSolve(a)
source('~/Desktop/assignment3_sample.R')
makeCacheMatrix(a)
cacheSolve(a)
makeCacheMatrix()
z=makeCacheMatrix(a)
z
cacheSolve(z)
cacheSolve(z)
source('~/Documents/Coursera_Data_Science/datasciencecoursera/Week_3/ProgrammingAssignment2/cachematrix.R')
a<-matrix(c(1:4),nrow = 2, ncol =2)
z=makeCacheMatrix(a)
cacheSolve(a)
source('~/Documents/Coursera_Data_Science/datasciencecoursera/Week_3/ProgrammingAssignment2/cachematrix.R')
z=matrix(c(1:4),nrow=2,ncol=2)
z
makeCacheMatrix(z)
a = makeCacheMatrix(z)
cacheSolve(a)
source('~/Documents/Coursera_Data_Science/datasciencecoursera/Week_3/ProgrammingAssignment2/cachematrix.R')
cacheSolve(a)
source('~/Documents/Coursera_Data_Science/datasciencecoursera/Week_3/ProgrammingAssignment2/cachematrix.R')
a = makeCacheMatrix(matrix(1:4, nrow=2))
a
cacheSolve(a)
source('~/Documents/Coursera_Data_Science/datasciencecoursera/Week_3/ProgrammingAssignment2/cachematrix.R')
a = makeCacheMatrix(matrix(1:4, nrow=2))
cacheSolve(a)
source('~/Desktop/assignment3_sample.R')
a=matrix(c(1:4),2,2)
a
z=makeCacheMatrix(a)
cacheSolve(z)
cacheSolve(z)
source('~/Documents/Coursera_Data_Science/datasciencecoursera/Week_3/ProgrammingAssignment2/cachematrix.R')
a=matrix(c(1:4),2,2)
z=makeCacheMatrix(a)
cacheSolve(z)
source('~/Documents/Coursera_Data_Science/datasciencecoursera/Week_3/ProgrammingAssignment2/cachematrix.R')
cacheSolve(z)
source('~/Documents/Coursera_Data_Science/datasciencecoursera/Week_3/ProgrammingAssignment2/cachematrix.R')
a<-makeCacheMatrix(matrix(1:4, nrow=2))
z=makeCacheMatrix(a)
cacheSolve(z)
a<-makeCacheMatrix(matrix(1:4, nrow=2,ncol=2))
a
source('~/Documents/Coursera_Data_Science/datasciencecoursera/Week_3/ProgrammingAssignment2/cachematrix.R')
a<-matrix(c(1,3,5,2,5,3,5,6),nrow=3,ncol=3)
a<-matrix(c(1,3,5,2,5,3,5,6,8),nrow=3,ncol=3)
a
z=makeCacheMatrix(a)
cacheSolve(z)
cacheSolve(z)
source('~/Documents/Coursera_Data_Science/datasciencecoursera/Week_3/ProgrammingAssignment2/cachematrix.R')
swirl()
library("swirl")
swirl()
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6,4,replace = TRUE)
sample(1:6,4,replace = TRUE)
sample(1:20,10)
letters
LETTERS
sample(LETTERS)
flips<-sample(c(0,1),100,replace = TRUE,prob = c(0.3,0.7))
flips
sum(flips)
?rbinom
rbinom(1,size = 100,prob = 0.7)
flips2<-rbinom(100,size = 1,prob = 0.7)
flips2
sum(flips2)
rnorm()
?rnorm
rnorm(10)
rnorm(10,mean=100,sd=25)
rpois(5,10)
replicate(100,rpois(5,10))
my_pois<-replicate(100,rpois(5,10))
my_pois
cm<-colMeans(my_pois)
hist(cm)
data("cars")
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(cars$speed,cars$dist)
plot(cars$dist,cars$speed)
plot(cars$speed,cars$dist,xlab=speed)
plot(cars$speed,cars$dist,xlab="speed")
plot(x=cars$speed,y=cars$dist,xlab="speed")
plot(x=cars$speed,y=cars$dist,xlab="Speed")
plot(x=cars$speed,y=cars$dist,xlab="Speed", ylab ="Stopping Distance")
plot(x=cars$speed,y=cars$dist,ylab ="Stopping Distance")
plot(x=cars$speed,y=cars$dist,xlab="Speed", ylab ="Stopping Distance")
plot(cars,main="My Plot")
plot(cars,main="My Plot",sub="My Plot Subtitle")
plot(cars,sub="My Plot Subtitle")
plot(cars,col=2)
plot(cars,xlim=c(10,15))
plot(cars,pch=2
)
mtcars
data("mtcars")
data(mtcars)
play()
dim(mtcars)
summary(mtcars)
str(mtcars)
head(a)
nxt()
?boxplaot()
?boxplaot
?boxplot
boxplot(mpg~cyl,data=mtcars)
hist(mtcars$mpg)
0
swirl()
hist(mtcars$mpg)
hist(mtcars$mpg,col=2)
hist(mtcars$mpg,col=6)
hist(mtcars$mpg,col=511)
hist(mtcars$mpg,col=51)
hist(mtcars$mpg,col=5435)
hist(mtcars$mpg,col=543)
hist(mtcars$mpg,col=53)
hist(mtcars$mpg,col=34)
hist(mtcars$mpg,col=34,xlim=c(20,30))
hist(mtcars$mpg,col=34,xlim=c(20,30),ylim=c(4,9))
hist(mtcars$mpg,col=64,xlim=c(20,30),ylim=c(4,9))
hist(mtcars$mpg,col=53)
setwd("/Volumes/WD Unlocker")
ls
list.dir()
list.files()
extras
system.time(readline("www.facebook.com"))
system.time(readline("www.facebook.com"))
system.time(readline("http://www.facebook.com"))
system.time(readline("https://www.facebook.com"))
set.seed(1)
rpois(5,2)
a=rpois(5,2)
class(a)
set.seed(1-)
set.seed(10)
x<-rep(0:1,each=5)
e=rnorm(10,0,20)
y=0.5 = 2*x +e
y=0.5 + 2*x +e
y
ploy(x,y)
plot(x,y)
library(datasets)
Rprof()
fit=lm(y~x1+x2)
summaryRprof()
x
url <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv'
download.file(url, 'house.csv', method='curl')
house <- read.csv('house.csv')
View(house)
View(subset(house, house$VAL == 24))
sum(house$VAL==24, na.rm = T)
table(house$VAL)
View(house$VAL==24)
View(house[house$VAL==24, ])
install.packages('xlsx')
install.packages('xlsxjars')
install.packages('rJava')
library(xlsx)
url  <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx'
download.file(url, 'gas.xlsx', method = 'curl', mode = 'wb')
colI <- 7:15
rowI <- 18:23
gas  <- read.xlsx('gas.xlsx', sheetIndex = 1, colIndex = colI, rowIndex = rowI)
sum(gas$Zip*gas$Ext,na.rm=T)
library(xlsx)
library("xlsx")
library("xslx")
library(xlsx)
library(swirl)
install_from_swirl("Getting and Cleaning Data")
url=("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
getwd()
setwd("~/Documents/Coursera_Data_Science/datasciencecoursera")
a=download.file(url = url,destfile ="Idaho.csv")
list.files()
Idaho=read.csv("Idaho.csv",header=TRUE)
head(Idaho)
a=download.file(url = url,destfile ="Idaho.csv",method = curl)
a=download.file(url = url,destfile ="Idaho.csv",method = "curl")
Idaho=read.csv("Idaho.csv",header=TRUE)
head(Idaho)
Idaho[Idaho$VAL=24]
Idaho(Idaho$VAL=24)
view(Idaho,Idaho$VAL==24)
Idaho$VAL==24
sum(Idaho$VAL==24)
sum(Idaho$VAL==24, na.rm = T)
Idaho$FES
str(Idaho$FES)
table(Idaho$FES)
head(Idaho$FES)
`getdata%2Fdata%2FDATA.gov_NGAP` <- read.csv("/var/folders/hm/sck9z4ss09n69g5yg4sj1zg80000gp/T//Rtmpbh1DPt/datab68e212bc2eb", sep="")
View(`getdata%2Fdata%2FDATA.gov_NGAP`)
install.packages("xlsx")
download <-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(download,destfile="Gas.xlsx",method = "CURL")
download.file(download,"Gas.xlsx",method = "CURL")
download.file(download,"gas.xlsx","CURL")
download.file(download,"gas.xlsx","curl")
library(xlsx)
install.packages("rjava")
install.packages("rJava")
install.packages("rJava")
library(rJava)
library(xlsx)
library(xlsxjars)
library(xlsx)
